# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://docs.rubocop.org/rubocop/configuration

require:
  - rubocop-rspec

AllCops:
  NewCops: enable


# Style

Style/BlockComments:
  Enabled: false

Style/BlockDelimiters:
  Enabled: false

Style/EmptyMethod:
  Enabled: false

Style/ExplicitBlockArgument:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false

Style/MapIntoArray:
  Enabled: false

Style/OperatorMethodCall: # it's just broken for `range.%(2)`
  Enabled: false

Style/PerlBackrefs:
  Enabled: false

Style/SymbolProc:
  Enabled: false

Style/Semicolon:
  Enabled: false

Style/SingleLineMethods:
  Enabled: false

Style/SpecialGlobalVars:
  Enabled: false


# Layout

Layout/BlockEndNewline:
  Enabled: false

Layout/LineLength:
  Enabled: false

Layout/MultilineBlockLayout:
  Enabled: false


# Metrics

Metrics/BlockLength:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false


# Naming

Naming/MethodParameterName:
  Enabled: false


# RSpec

RSpec/ContextWording:
  Enabled: false

RSpec/DescribeClass:
  Enabled: false

RSpec/ExampleLength:
  Enabled: false

RSpec/MessageSpies:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/NestedGroups:
  Enabled: false

RSpec/VerifiedDoubles:
  Enabled: false


# Lint

Lint/EmptyBlock:
  Enabled: false

Lint/UnexpectedBlockArity:
  Enabled: false
